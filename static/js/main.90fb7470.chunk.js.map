{"version":3,"sources":["Driver.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","firebaseConfig.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Driver","id","useParams","message","setMessage","useState","location","setLocation","useEffect","messaging","getMessaging","requestPermission","then","getToken","vapidKey","token","console","log","axios","post","topic","concat","response","data","catch","error","onMessage","payload","notification","body","updateAvailability","available","forkliftIndex","_jsxs","children","_jsx","onClick","completeTask","App","Router","Routes","Route","path","element","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseApp","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"0PAgBAA,YAVuB,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAoEFC,MA/Df,WACE,MAAM,GAAEC,GAAOC,eACRC,EAASC,GAAcC,mBAAS,KAChCC,EAAUC,GAAeF,mBAAS,MAEzCG,qBAAU,KACR,MAAMC,EAAYC,cAClBD,EAAUE,oBACPC,MAAK,IAAMH,EAAUI,SAAS,CAAEC,SAAU,kDAC1CF,MAAKG,IACJC,QAAQC,IAAI,SAAUF,GACfG,IAAMC,KAAK,uCAAwC,CAAEJ,QAAOK,MAAM,YAADC,OAAcpB,QAEvFW,MAAKU,IACJN,QAAQC,IAAI,uBAAwBK,EAASC,KAAK,IAEnDC,OAAMC,IACLT,QAAQS,MAAM,8BAA+BA,EAAM,IAGvDC,YAAUjB,GAAWkB,IACnBX,QAAQC,IAAI,oBAAqBU,GACjCvB,EAAWuB,EAAQC,aAAaC,MAChCtB,EAAYoB,EAAQJ,KAAKjB,SAAS,GAClC,GACD,CAACL,IAEJ,MAAM6B,EAAsBC,IAC1Bb,IAAMC,KAAK,iDAAkD,CAAEa,cAAe/B,EAAK,EAAG8B,cACnFnB,MAAKU,IACJN,QAAQC,IAAIK,EAASC,KAAK,IAE3BC,OAAMC,IACLT,QAAQS,MAAM,+BAAgCA,EAAM,GACpD,EAcN,OACEQ,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,qBACJC,cAAA,KAAAD,SAAI/B,IACHG,GACC6B,cAAA,OAAAD,SACEC,cAAA,UAAQC,QAjBKC,KACnBnB,IAAMC,KAAK,2CAA4C,CAAEa,cAAe/B,EAAK,EAAGK,aAC7EM,MAAKU,IACJN,QAAQC,IAAIK,EAASC,MACrBhB,EAAY,KAAK,IAElBiB,OAAMC,IACLT,QAAQS,MAAM,yBAA0BA,EAAM,GAC9C,EASgCS,SAAC,oBAGnCC,cAAA,UAAQC,QAASA,IAAMN,GAAmB,GAAMI,SAAC,cACjDC,cAAA,UAAQC,QAASA,IAAMN,GAAmB,GAAOI,SAAC,oBAGxD,EChEeI,MAXf,WACE,OACEH,cAACI,IAAM,CAAAL,SACLD,eAACO,IAAM,CAAAN,SAAA,CACLC,cAACM,IAAK,CAACC,KAAK,cAAcC,QAASR,cAACnC,EAAM,MAC1CmC,cAACM,IAAK,CAACC,KAAK,IAAIC,QAASR,cAAA,OAAAD,SAAK,oBAItC,ECbA,MAAMU,EAAcC,QACW,cAA7BC,OAAOxC,SAASyC,UACa,UAA7BD,OAAOxC,SAASyC,UAChBD,OAAOxC,SAASyC,SAASC,MACvB,sBA6BJ,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTtC,MAAK2C,IACJA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAC1B7C,QAAQC,IACN,qFAGEkC,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAGlBvC,QAAQC,IAAI,sCAERkC,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,IAGvB,EACD,CACF,IAEF/B,OAAMC,IACLT,QAAQS,MAAM,4CAA6CA,EAAM,GAEvE,CCtDeuC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAKuD,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECLF,MASMQ,EAAcjF,YATG,CAClBC,OAAQ,0CACXC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAIHW,EAAYC,YAAa+D,GCH/B/C,YAAUjB,GAAYkB,IACpBX,QAAQC,IAAI,qBAAsBU,EAAQ,IAI5C+C,IAASC,OACPxC,cAACyC,IAAMC,WAAU,CAAA3C,SACfC,cAACG,EAAG,MAENwC,SAASC,eAAe,SHZnB,SAAkB5B,GACvB,GAA6C,kBAAmBC,UAAW,CAEzE,GADkB,IAAI4B,IAAIC,cAAwBnC,OAAOxC,SAAS4E,MACpDC,SAAWrC,OAAOxC,SAAS6E,OACvC,OAGFrC,OAAOsC,iBAAiB,QAAQ,KAC9B,MAAMlC,EAAK,GAAA7B,OAAM4D,cAAsB,sBAEnCrC,IAkDV,SAAiCM,EAAOC,GACtCkC,MAAMnC,EAAO,CACXoC,QAAS,CAAE,iBAAkB,YAE5B1E,MAAKU,IACJ,MAAMiE,EAAcjE,EAASgE,QAAQE,IAAI,gBAEnB,MAApBlE,EAASmE,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAE5CtC,UAAUC,cAAcsC,MAAM/E,MAAK2C,IACjCA,EAAaqC,aAAahF,MAAK,KAC7BkC,OAAOxC,SAASuF,QAAQ,GACxB,IAGJ5C,EAAgBC,EAAOC,EACzB,IAED3B,OAAM,KACLR,QAAQC,IACN,gEACD,GAEP,CAzEQ6E,CAAwB5C,EAAOC,GAE/BC,UAAUC,cAAcsC,MAAM/E,MAAK,KACjCI,QAAQC,IACN,gEACD,KAGHgC,EAAgBC,EAAOC,EACzB,GAEJ,CACF,CGRA4C,GAEA/B,G","file":"static/js/main.90fb7470.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { getMessaging, onMessage } from 'firebase/messaging';\r\nimport { initializeApp } from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBKrtlWdUW7zO9g9zm9slaguHQmF6kJuV0\",\r\n  authDomain: \"diyouforklfitapp.firebaseapp.com\",\r\n  projectId: \"diyouforklfitapp\",\r\n  storageBucket: \"diyouforklfitapp.appspot.com\",\r\n  messagingSenderId: \"728063402975\",\r\n  appId: \"1:728063402975:web:ef09e7cb6df5ef0ddcda6a\",\r\n  measurementId: \"G-2QJDPH5EGW\"\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\nfunction Driver() {\r\n  const { id } = useParams();\r\n  const [message, setMessage] = useState('');\r\n  const [location, setLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const messaging = getMessaging();\r\n    messaging.requestPermission()\r\n      .then(() => messaging.getToken({ vapidKey: 'qVbu8IcLjOokqpyf2rAFDH9yfm7cW4C131XYO2mTKho' }))\r\n      .then(token => {\r\n        console.log('Token:', token);\r\n        return axios.post('http://your-server-ip:5000/subscribe', { token, topic: `forklift-${id}` });\r\n      })\r\n      .then(response => {\r\n        console.log('Subscribed to topic:', response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error subscribing to topic:', error);\r\n      });\r\n\r\n    onMessage(messaging, payload => {\r\n      console.log('Message received:', payload);\r\n      setMessage(payload.notification.body);\r\n      setLocation(payload.data.location); // Assuming location is sent in data\r\n    });\r\n  }, [id]);\r\n\r\n  const updateAvailability = (available) => {\r\n    axios.post('http://your-server-ip:5000/update-availability', { forkliftIndex: id - 1, available })\r\n      .then(response => {\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error updating availability:', error);\r\n      });\r\n  };\r\n\r\n  const completeTask = () => {\r\n    axios.post('http://your-server-ip:5000/complete-task', { forkliftIndex: id - 1, location })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setLocation(null);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error completing task:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Driver Interface</h1>\r\n      <p>{message}</p>\r\n      {location && (\r\n        <div>\r\n          <button onClick={completeTask}>Complete Task</button>\r\n        </div>\r\n      )}\r\n      <button onClick={() => updateAvailability(true)}>Available</button>\r\n      <button onClick={() => updateAvailability(false)}>Not Available</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Driver;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Driver from './Driver';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/driver/:id\" element={<Driver />} />\n        <Route path=\"/\" element={<div>Home Page</div>} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  window.location.hostname === '[::1]' ||\r\n  window.location.hostname.match(\r\n    /^127(?:\\.\\d+){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service worker.'\r\n          );\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log(\r\n                'New content is available and will be used when all tabs for this page are closed.'\r\n              );\r\n\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// src/firebaseConfig.js\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getMessaging } from \"firebase/messaging\";\r\n\r\nconst firebaseConfig = {\r\n     apiKey: \"AIzaSyBKrtlWdUW7zO9g9zm9slaguHQmF6kJuV0\",\r\n  authDomain: \"diyouforklfitapp.firebaseapp.com\",\r\n  projectId: \"diyouforklfitapp\",\r\n  storageBucket: \"diyouforklfitapp.appspot.com\",\r\n  messagingSenderId: \"728063402975\",\r\n  appId: \"1:728063402975:web:ef09e7cb6df5ef0ddcda6a\"\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(firebaseApp);\r\n\r\nexport { messaging };\r\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { messaging } from './firebaseConfig';\nimport { onMessage } from 'firebase/messaging';\n\n// Initialize Firebase messaging listener\nonMessage(messaging, (payload) => {\n  console.log('Message received. ', payload);\n  // Customize notification here\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}